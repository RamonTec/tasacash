{
  "{\"sourceRoot\":\"/home/elias/Escritorio/tasita/Backend/src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elias/Escritorio/tasita/Backend\",\"filename\":\"/home/elias/Escritorio/tasita/Backend/src/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elias/Escritorio/tasita/Backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elias/Escritorio/tasita/Backend",
      "filename": "/home/elias/Escritorio/tasita/Backend/src/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elias/Escritorio/tasita/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elias/Escritorio/tasita/Backend/src/server.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elias/Escritorio/tasita/Backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _request = require(\"./modules/request.js\");\n\nvar _currency = require(\"./models/currency.js\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//const path = require(\"path\");\n//const axios = require(\"axios\");\nvar bodyParser = require(\"body-parser\");\n\nvar cors = require(\"cors\");\n\nvar morgan = require(\"morgan\");\n\nvar express = require(\"express\");\n\nvar app = express();\n\nvar mongoose = require(\"mongoose\");\n\nvar schema = require(\"./Graphql/Schema/schema\");\n\nmongoose.Promise = global.Promise;\n\nvar rate = require(\"./models/rates\"); //import { ApolloServer } from \"apollo-server\";\n\n\nvar graphqlHTTP = require('express-graphql'); //Conexion a la BD\n\n\nmongoose.connect(\"mongodb+srv://tasa:27592666@tasa-rgakk.mongodb.net/test?retryWrites=true&w=majority\", {\n  //quitar useNewUrlParser cuando este en produccion y colocar el nombre de usuario y clave de la base de datos\n  dbName: \"tasa\",\n  user: \"tasa\",\n  pass: \"OVED1bLnRIzsJdM5\"\n}).then(function () {\n  return console.log(\"BASE DE DATOS CONECTADA CORRECTAMENTE\");\n})[\"catch\"](function (err) {\n  return console.log(err);\n}); //API LOCALBITCOINS\n\nfunction interval() {\n  var j = 0;\n  (0, _request.query)(j);\n}\n\nfunction chandles() {\n  return _chandles.apply(this, arguments);\n}\n\nfunction _chandles() {\n  _chandles = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee() {\n    var j;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            j = 0;\n            _context.next = 3;\n            return (0, _currency.searchForDate)(j);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _chandles.apply(this, arguments);\n}\n\nsetInterval(_request.usd, 300000);\nsetInterval(interval, 300000);\nsetInterval(chandles, 400000);\napp.set(\"PORT\", process.env.port || 5000); //Evaluando si estamos en produccion o no\n// Middlewres\n\napp.use(express.urlencoded({\n  extended: false\n}));\napp.use(express.json());\napp.use(cors());\napp.use(morgan());\napp.use(bodyParser.json()); //Ruta api\n\napp.use('/api', graphqlHTTP({\n  schema: schema,\n  graphiql: true\n})); // Ruta de api para produccion\n// -> https://prueba-front-tasa.herokuapp.com/api\n\napp.listen(app.get(\"port\"), function () {\n  console.log(\"SERVIDOR FUNCIONANDO EN EL  PUERTO: \", app.get(\"port\"));\n  console.log(\"Graphql corriendo en el puerto \".concat(app.get(\"port\"), \" http://localhost:5000/api\"));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJib2R5UGFyc2VyIiwicmVxdWlyZSIsImNvcnMiLCJtb3JnYW4iLCJleHByZXNzIiwiYXBwIiwibW9uZ29vc2UiLCJzY2hlbWEiLCJQcm9taXNlIiwiZ2xvYmFsIiwicmF0ZSIsImdyYXBocWxIVFRQIiwiY29ubmVjdCIsImRiTmFtZSIsInVzZXIiLCJwYXNzIiwidGhlbiIsImNvbnNvbGUiLCJsb2ciLCJlcnIiLCJpbnRlcnZhbCIsImoiLCJjaGFuZGxlcyIsInNldEludGVydmFsIiwidXNkIiwic2V0IiwicHJvY2VzcyIsImVudiIsInBvcnQiLCJ1c2UiLCJ1cmxlbmNvZGVkIiwiZXh0ZW5kZWQiLCJqc29uIiwiZ3JhcGhpcWwiLCJsaXN0ZW4iLCJnZXQiXSwibWFwcGluZ3MiOiI7O0FBWUE7O0FBQ0E7Ozs7OztBQWJBO0FBQ0E7QUFDQSxJQUFNQSxVQUFVLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQTFCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsTUFBTSxHQUFHRixPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxJQUFNRyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLElBQU1JLEdBQUcsR0FBR0QsT0FBTyxFQUFuQjs7QUFDQSxJQUFNRSxRQUFRLEdBQUdMLE9BQU8sQ0FBQyxVQUFELENBQXhCOztBQUNBLElBQU1NLE1BQU0sR0FBR04sT0FBTyxDQUFDLHlCQUFELENBQXRCOztBQUNBSyxRQUFRLENBQUNFLE9BQVQsR0FBbUJDLE1BQU0sQ0FBQ0QsT0FBMUI7O0FBQ0EsSUFBTUUsSUFBSSxHQUFHVCxPQUFPLENBQUMsZ0JBQUQsQ0FBcEIsQyxDQUNBOzs7QUFHQSxJQUFJVSxXQUFXLEdBQUdWLE9BQU8sQ0FBQyxpQkFBRCxDQUF6QixDLENBRUE7OztBQUNBSyxRQUFRLENBQ0xNLE9BREgsQ0FDVyxxRkFEWCxFQUNrRztBQUM5RjtBQUNBQyxFQUFBQSxNQUFNLEVBQUUsTUFGc0Y7QUFHOUZDLEVBQUFBLElBQUksRUFBRSxNQUh3RjtBQUk5RkMsRUFBQUEsSUFBSSxFQUFFO0FBSndGLENBRGxHLEVBT0dDLElBUEgsQ0FPUTtBQUFBLFNBQU1DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLHVDQUFaLENBQU47QUFBQSxDQVBSLFdBUVMsVUFBQUMsR0FBRztBQUFBLFNBQUlGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxHQUFaLENBQUo7QUFBQSxDQVJaLEUsQ0FTQTs7QUFFQSxTQUFTQyxRQUFULEdBQW9CO0FBQ2xCLE1BQUlDLENBQUMsR0FBRyxDQUFSO0FBQ0Esc0JBQU1BLENBQU47QUFDRDs7U0FFY0MsUTs7Ozs7OzswQkFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDTUQsWUFBQUEsQ0FETixHQUNVLENBRFY7QUFBQTtBQUFBLG1CQUVRLDZCQUFjQSxDQUFkLENBRlI7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsRzs7OztBQUtBRSxXQUFXLENBQUNDLFlBQUQsRUFBTSxNQUFOLENBQVg7QUFDQUQsV0FBVyxDQUFDSCxRQUFELEVBQVcsTUFBWCxDQUFYO0FBQ0FHLFdBQVcsQ0FBQ0QsUUFBRCxFQUFXLE1BQVgsQ0FBWDtBQUVBakIsR0FBRyxDQUFDb0IsR0FBSixDQUFRLE1BQVIsRUFBZ0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXBDLEUsQ0FFQTtBQUVBOztBQUNBdkIsR0FBRyxDQUFDd0IsR0FBSixDQUFRekIsT0FBTyxDQUFDMEIsVUFBUixDQUFtQjtBQUFFQyxFQUFBQSxRQUFRLEVBQUU7QUFBWixDQUFuQixDQUFSO0FBQ0ExQixHQUFHLENBQUN3QixHQUFKLENBQVF6QixPQUFPLENBQUM0QixJQUFSLEVBQVI7QUFDQTNCLEdBQUcsQ0FBQ3dCLEdBQUosQ0FBUTNCLElBQUksRUFBWjtBQUNBRyxHQUFHLENBQUN3QixHQUFKLENBQVExQixNQUFNLEVBQWQ7QUFDQUUsR0FBRyxDQUFDd0IsR0FBSixDQUFRN0IsVUFBVSxDQUFDZ0MsSUFBWCxFQUFSLEUsQ0FFQTs7QUFDQTNCLEdBQUcsQ0FBQ3dCLEdBQUosQ0FBUSxNQUFSLEVBQWdCbEIsV0FBVyxDQUFDO0FBQzFCSixFQUFBQSxNQUFNLEVBQUVBLE1BRGtCO0FBRTFCMEIsRUFBQUEsUUFBUSxFQUFFO0FBRmdCLENBQUQsQ0FBM0IsRSxDQUtBO0FBQ0E7O0FBQ0E1QixHQUFHLENBQUM2QixNQUFKLENBQVc3QixHQUFHLENBQUM4QixHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCLFlBQU07QUFDaENsQixFQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxzQ0FBWixFQUFvRGIsR0FBRyxDQUFDOEIsR0FBSixDQUFRLE1BQVIsQ0FBcEQ7QUFDQWxCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUiwwQ0FBOENiLEdBQUcsQ0FBQzhCLEdBQUosQ0FBUSxNQUFSLENBQTlDO0FBQ0QsQ0FIRCIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlhcy9Fc2NyaXRvcmlvL3Rhc2l0YS9CYWNrZW5kL3NyYyIsInNvdXJjZXNDb250ZW50IjpbIi8vY29uc3QgcGF0aCA9IHJlcXVpcmUoXCJwYXRoXCIpO1xyXG4vL2NvbnN0IGF4aW9zID0gcmVxdWlyZShcImF4aW9zXCIpO1xyXG5jb25zdCBib2R5UGFyc2VyID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIik7XHJcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoXCJtb3JnYW5cIik7XHJcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBtb25nb29zZSA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTtcclxuY29uc3Qgc2NoZW1hID0gcmVxdWlyZShcIi4vR3JhcGhxbC9TY2hlbWEvc2NoZW1hXCIpO1xyXG5tb25nb29zZS5Qcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XHJcbmNvbnN0IHJhdGUgPSByZXF1aXJlKFwiLi9tb2RlbHMvcmF0ZXNcIik7XHJcbi8vaW1wb3J0IHsgQXBvbGxvU2VydmVyIH0gZnJvbSBcImFwb2xsby1zZXJ2ZXJcIjtcclxuaW1wb3J0IHsgcXVlcnksIHVzZCB9IGZyb20gXCIuL21vZHVsZXMvcmVxdWVzdC5qc1wiO1xyXG5pbXBvcnQgeyBzZWFyY2hGb3JEYXRlIH0gZnJvbSBcIi4vbW9kZWxzL2N1cnJlbmN5LmpzXCI7XHJcbnZhciBncmFwaHFsSFRUUCA9IHJlcXVpcmUoJ2V4cHJlc3MtZ3JhcGhxbCcpO1xyXG5cclxuLy9Db25leGlvbiBhIGxhIEJEXHJcbm1vbmdvb3NlXHJcbiAgLmNvbm5lY3QoXCJtb25nb2RiK3NydjovL3Rhc2E6Mjc1OTI2NjZAdGFzYS1yZ2Fray5tb25nb2RiLm5ldC90ZXN0P3JldHJ5V3JpdGVzPXRydWUmdz1tYWpvcml0eVwiLCB7XHJcbiAgICAvL3F1aXRhciB1c2VOZXdVcmxQYXJzZXIgY3VhbmRvIGVzdGUgZW4gcHJvZHVjY2lvbiB5IGNvbG9jYXIgZWwgbm9tYnJlIGRlIHVzdWFyaW8geSBjbGF2ZSBkZSBsYSBiYXNlIGRlIGRhdG9zXHJcbiAgICBkYk5hbWU6IFwidGFzYVwiLFxyXG4gICAgdXNlcjogXCJ0YXNhXCIsXHJcbiAgICBwYXNzOiBcIk9WRUQxYkxuUkl6c0pkTTVcIlxyXG4gIH0pXHJcbiAgLnRoZW4oKCkgPT4gY29uc29sZS5sb2coXCJCQVNFIERFIERBVE9TIENPTkVDVEFEQSBDT1JSRUNUQU1FTlRFXCIpKVxyXG4gIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSk7XHJcbi8vQVBJIExPQ0FMQklUQ09JTlNcclxuXHJcbmZ1bmN0aW9uIGludGVydmFsKCkge1xyXG4gIGxldCBqID0gMDtcclxuICBxdWVyeShqKTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gY2hhbmRsZXMoKSB7XHJcbiAgbGV0IGogPSAwO1xyXG4gIGF3YWl0IHNlYXJjaEZvckRhdGUoaik7XHJcbn1cclxuXHJcbnNldEludGVydmFsKHVzZCwgMzAwMDAwKTtcclxuc2V0SW50ZXJ2YWwoaW50ZXJ2YWwsIDMwMDAwMCk7XHJcbnNldEludGVydmFsKGNoYW5kbGVzLCA0MDAwMDApO1xyXG5cclxuYXBwLnNldChcIlBPUlRcIiwgcHJvY2Vzcy5lbnYucG9ydCB8fCA1MDAwKTtcclxuXHJcbi8vRXZhbHVhbmRvIHNpIGVzdGFtb3MgZW4gcHJvZHVjY2lvbiBvIG5vXHJcblxyXG4vLyBNaWRkbGV3cmVzXHJcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IGZhbHNlIH0pKTtcclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoY29ycygpKTtcclxuYXBwLnVzZShtb3JnYW4oKSk7XHJcbmFwcC51c2UoYm9keVBhcnNlci5qc29uKCkpO1xyXG5cclxuLy9SdXRhIGFwaVxyXG5hcHAudXNlKCcvYXBpJywgZ3JhcGhxbEhUVFAoe1xyXG4gIHNjaGVtYTogc2NoZW1hLFxyXG4gIGdyYXBoaXFsOiB0cnVlXHJcbn0pKTtcclxuXHJcbi8vIFJ1dGEgZGUgYXBpIHBhcmEgcHJvZHVjY2lvblxyXG4vLyAtPiBodHRwczovL3BydWViYS1mcm9udC10YXNhLmhlcm9rdWFwcC5jb20vYXBpXHJcbmFwcC5saXN0ZW4oYXBwLmdldChcInBvcnRcIiksICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhcIlNFUlZJRE9SIEZVTkNJT05BTkRPIEVOIEVMICBQVUVSVE86IFwiLCBhcHAuZ2V0KFwicG9ydFwiKSk7XHJcbiAgY29uc29sZS5sb2coYEdyYXBocWwgY29ycmllbmRvIGVuIGVsIHB1ZXJ0byAke2FwcC5nZXQoXCJwb3J0XCIpfSBodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpYCk7XHJcbn0pO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "bodyParser",
        "require",
        "cors",
        "morgan",
        "express",
        "app",
        "mongoose",
        "schema",
        "Promise",
        "global",
        "rate",
        "graphqlHTTP",
        "connect",
        "dbName",
        "user",
        "pass",
        "then",
        "console",
        "log",
        "err",
        "interval",
        "j",
        "chandles",
        "setInterval",
        "usd",
        "set",
        "process",
        "env",
        "port",
        "use",
        "urlencoded",
        "extended",
        "json",
        "graphiql",
        "listen",
        "get"
      ],
      "mappings": ";;AAYA;;AACA;;;;;;AAbA;AACA;AACA,IAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,MAAM,GAAGF,OAAO,CAAC,QAAD,CAAtB;;AACA,IAAMG,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMI,GAAG,GAAGD,OAAO,EAAnB;;AACA,IAAME,QAAQ,GAAGL,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMM,MAAM,GAAGN,OAAO,CAAC,yBAAD,CAAtB;;AACAK,QAAQ,CAACE,OAAT,GAAmBC,MAAM,CAACD,OAA1B;;AACA,IAAME,IAAI,GAAGT,OAAO,CAAC,gBAAD,CAApB,C,CACA;;;AAGA,IAAIU,WAAW,GAAGV,OAAO,CAAC,iBAAD,CAAzB,C,CAEA;;;AACAK,QAAQ,CACLM,OADH,CACW,qFADX,EACkG;AAC9F;AACAC,EAAAA,MAAM,EAAE,MAFsF;AAG9FC,EAAAA,IAAI,EAAE,MAHwF;AAI9FC,EAAAA,IAAI,EAAE;AAJwF,CADlG,EAOGC,IAPH,CAOQ;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,uCAAZ,CAAN;AAAA,CAPR,WAQS,UAAAC,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAJ;AAAA,CARZ,E,CASA;;AAEA,SAASC,QAAT,GAAoB;AAClB,MAAIC,CAAC,GAAG,CAAR;AACA,sBAAMA,CAAN;AACD;;SAEcC,Q;;;;;;;0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACMD,YAAAA,CADN,GACU,CADV;AAAA;AAAA,mBAEQ,6BAAcA,CAAd,CAFR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKAE,WAAW,CAACC,YAAD,EAAM,MAAN,CAAX;AACAD,WAAW,CAACH,QAAD,EAAW,MAAX,CAAX;AACAG,WAAW,CAACD,QAAD,EAAW,MAAX,CAAX;AAEAjB,GAAG,CAACoB,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC,E,CAEA;AAEA;;AACAvB,GAAG,CAACwB,GAAJ,CAAQzB,OAAO,CAAC0B,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR;AACA1B,GAAG,CAACwB,GAAJ,CAAQzB,OAAO,CAAC4B,IAAR,EAAR;AACA3B,GAAG,CAACwB,GAAJ,CAAQ3B,IAAI,EAAZ;AACAG,GAAG,CAACwB,GAAJ,CAAQ1B,MAAM,EAAd;AACAE,GAAG,CAACwB,GAAJ,CAAQ7B,UAAU,CAACgC,IAAX,EAAR,E,CAEA;;AACA3B,GAAG,CAACwB,GAAJ,CAAQ,MAAR,EAAgBlB,WAAW,CAAC;AAC1BJ,EAAAA,MAAM,EAAEA,MADkB;AAE1B0B,EAAAA,QAAQ,EAAE;AAFgB,CAAD,CAA3B,E,CAKA;AACA;;AACA5B,GAAG,CAAC6B,MAAJ,CAAW7B,GAAG,CAAC8B,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAChClB,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDb,GAAG,CAAC8B,GAAJ,CAAQ,MAAR,CAApD;AACAlB,EAAAA,OAAO,CAACC,GAAR,0CAA8Cb,GAAG,CAAC8B,GAAJ,CAAQ,MAAR,CAA9C;AACD,CAHD",
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src",
      "sourcesContent": [
        "//const path = require(\"path\");\r\n//const axios = require(\"axios\");\r\nconst bodyParser = require(\"body-parser\");\r\nconst cors = require(\"cors\");\r\nconst morgan = require(\"morgan\");\r\nconst express = require(\"express\");\r\nconst app = express();\r\nconst mongoose = require(\"mongoose\");\r\nconst schema = require(\"./Graphql/Schema/schema\");\r\nmongoose.Promise = global.Promise;\r\nconst rate = require(\"./models/rates\");\r\n//import { ApolloServer } from \"apollo-server\";\r\nimport { query, usd } from \"./modules/request.js\";\r\nimport { searchForDate } from \"./models/currency.js\";\r\nvar graphqlHTTP = require('express-graphql');\r\n\r\n//Conexion a la BD\r\nmongoose\r\n  .connect(\"mongodb+srv://tasa:27592666@tasa-rgakk.mongodb.net/test?retryWrites=true&w=majority\", {\r\n    //quitar useNewUrlParser cuando este en produccion y colocar el nombre de usuario y clave de la base de datos\r\n    dbName: \"tasa\",\r\n    user: \"tasa\",\r\n    pass: \"OVED1bLnRIzsJdM5\"\r\n  })\r\n  .then(() => console.log(\"BASE DE DATOS CONECTADA CORRECTAMENTE\"))\r\n  .catch(err => console.log(err));\r\n//API LOCALBITCOINS\r\n\r\nfunction interval() {\r\n  let j = 0;\r\n  query(j);\r\n}\r\n\r\nasync function chandles() {\r\n  let j = 0;\r\n  await searchForDate(j);\r\n}\r\n\r\nsetInterval(usd, 300000);\r\nsetInterval(interval, 300000);\r\nsetInterval(chandles, 400000);\r\n\r\napp.set(\"PORT\", process.env.port || 5000);\r\n\r\n//Evaluando si estamos en produccion o no\r\n\r\n// Middlewres\r\napp.use(express.urlencoded({ extended: false }));\r\napp.use(express.json());\r\napp.use(cors());\r\napp.use(morgan());\r\napp.use(bodyParser.json());\r\n\r\n//Ruta api\r\napp.use('/api', graphqlHTTP({\r\n  schema: schema,\r\n  graphiql: true\r\n}));\r\n\r\n// Ruta de api para produccion\r\n// -> https://prueba-front-tasa.herokuapp.com/api\r\napp.listen(app.get(\"port\"), () => {\r\n  console.log(\"SERVIDOR FUNCIONANDO EN EL  PUERTO: \", app.get(\"port\"));\r\n  console.log(`Graphql corriendo en el puerto ${app.get(\"port\")} http://localhost:5000/api`);\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1564583055980
  },
  "{\"sourceRoot\":\"/home/elias/Escritorio/tasita/Backend/src/modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elias/Escritorio/tasita/Backend\",\"filename\":\"/home/elias/Escritorio/tasita/Backend/src/modules/request.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elias/Escritorio/tasita/Backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elias/Escritorio/tasita/Backend",
      "filename": "/home/elias/Escritorio/tasita/Backend/src/modules/request.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elias/Escritorio/tasita/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elias/Escritorio/tasita/Backend/src/modules/request.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elias/Escritorio/tasita/Backend/src/modules/request.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/modules",
        "sourceFileName": "request.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.query = query;\nexports.order = order;\nexports.save = save;\nexports.saveUsdInBtc = saveUsdInBtc;\nexports.usd = usd;\n\nvar _unaunth = require(\"../modules/unaunth.js\");\n\nvar _currency = require(\"../models/currency.js\");\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction query(j) {\n  var currency = [\"ves\", \"usd\", \"eur\", \"rub\", \"cny\"];\n\n  if (j <= currency.length - 1) {\n    console.log(currency[j]);\n    var enlace = \"/bitcoincharts/\".concat(currency[j], \"/trades.json\");\n    console.log(enlace);\n    var instancia = new _unaunth.LocalBitcoin(enlace);\n    var consulta = instancia.request(enlace);\n    consulta.then(\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(result) {\n        var i, results;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (result !== undefined) {\n                  i = 0;\n                  results = result.data;\n                  console.log(currency.length);\n                  save(results, i, currency[j]);\n                  j++;\n                  query(j);\n                }\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }())[\"catch\"](function (err) {\n      console.log(err);\n    });\n  }\n}\n\nfunction order(results) {\n  var object = results;\n  var obj = object.sort(function (a, b) {\n    if (a.date > b.date) {\n      return 1;\n    }\n\n    if (a.date < b.date) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return obj;\n}\n\nfunction save(results, i, coin) {\n  var ordened = 0;\n\n  if (i <= results.length - 1) {\n    ordened = order(results);\n    ordened.forEach(function (ordened) {\n      var unixEpochTimeMS = ordened.date * 1000;\n      var d = new Date(unixEpochTimeMS);\n      var strDate = d.toLocaleString();\n      (0, _currency.searchTid)(ordened.tid, coin).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = _asyncToGenerator(\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2(res) {\n          var rates;\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(res == 1)) {\n                    _context2.next = 4;\n                    break;\n                  }\n\n                  rates = new _currency.currency({\n                    tid: ordened.tid,\n                    currency: coin,\n                    price: ordened.price,\n                    amount: ordened.amount,\n                    date: strDate,\n                    epoch: ordened.date\n                  });\n                  _context2.next = 4;\n                  return rates.save();\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }())[\"catch\"](function (err) {\n        console.log(err);\n      });\n    });\n  }\n}\n\nfunction saveUsdInBtc(_x3, _x4) {\n  return _saveUsdInBtc.apply(this, arguments);\n}\n\nfunction _saveUsdInBtc() {\n  _saveUsdInBtc = _asyncToGenerator(\n  /*#__PURE__*/\n  regeneratorRuntime.mark(function _callee3(price, date) {\n    var rates;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            rates = new _currency.priceUsd({\n              price: price,\n              date: date\n            });\n            _context3.next = 3;\n            return rates.save();\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _saveUsdInBtc.apply(this, arguments);\n}\n\nfunction usd() {\n  var enlace = \"/api/equation/btc_in_usd\";\n  console.log(enlace);\n  var instancia = new _unaunth.LocalBitcoin(enlace);\n  instancia.request(enlace).then(function (res) {\n    console.log(res.data.data);\n    saveUsdInBtc(res.data.data, Date.now());\n  });\n}\n/* export function consulta() {\r\n  let equation = [\r\n    \"usd_in_ves\",\r\n    \"usd_in_eur\",\r\n    \"usd_in_rub\",\r\n    \"usd_in_cny\",\r\n    \"btc_in_usd\"\r\n  ];\r\n\r\n  if (j <= equation.length - 1) {\r\n    console.log(equation[j]);\r\n    let equationenlace = `/api/equation/${equation[j]}/`;\r\n    console.log(enlace);\r\n    let instancia = new LocalBitcoin(enlace);\r\n    const consulta = instancia.request(enlace);\r\n\r\n    consulta\r\n      .then(async result => {\r\n        if (result !== undefined) {\r\n          let i = 0;\r\n          const results = result.data;\r\n          console.log(equation.length);\r\n          save(results, i, equation[j]);\r\n          j++;\r\n          query(j);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "request.js"
      ],
      "names": [
        "query",
        "j",
        "currency",
        "length",
        "console",
        "log",
        "enlace",
        "instancia",
        "LocalBitcoin",
        "consulta",
        "request",
        "then",
        "result",
        "undefined",
        "i",
        "results",
        "data",
        "save",
        "err",
        "order",
        "object",
        "obj",
        "sort",
        "a",
        "b",
        "date",
        "coin",
        "ordened",
        "forEach",
        "unixEpochTimeMS",
        "d",
        "Date",
        "strDate",
        "toLocaleString",
        "tid",
        "res",
        "rates",
        "price",
        "amount",
        "epoch",
        "saveUsdInBtc",
        "priceUsd",
        "usd",
        "now"
      ],
      "mappings": "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",
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/modules",
      "sourcesContent": [
        "import { LocalBitcoin } from \"../modules/unaunth.js\";\r\nimport { currency, searchTid, priceUsd } from \"../models/currency.js\";\r\n\r\nexport function query(j) {\r\n  let currency = [\"ves\", \"usd\", \"eur\", \"rub\", \"cny\"];\r\n\r\n  if (j <= currency.length - 1) {\r\n    console.log(currency[j]);\r\n    let enlace = `/bitcoincharts/${currency[j]}/trades.json`;\r\n    console.log(enlace);\r\n    let instancia = new LocalBitcoin(enlace);\r\n    const consulta = instancia.request(enlace);\r\n\r\n    consulta\r\n      .then(async result => {\r\n        if (result !== undefined) {\r\n          let i = 0;\r\n          const results = result.data;\r\n          console.log(currency.length);\r\n          save(results, i, currency[j]);\r\n          j++;\r\n          query(j);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n\r\nexport function order(results) {\r\n  const object = results;\r\n  const obj = object.sort(function(a, b) {\r\n    if (a.date > b.date) {\r\n      return 1;\r\n    }\r\n    if (a.date < b.date) {\r\n      return -1;\r\n    }\r\n\r\n    return 0;\r\n  });\r\n\r\n  return obj;\r\n}\r\n\r\nexport function save(results, i, coin) {\r\n  let ordened = 0;\r\n  if (i <= results.length - 1) {\r\n    ordened = order(results);\r\n\r\n    ordened.forEach(ordened => {\r\n      const unixEpochTimeMS = ordened.date * 1000;\r\n      const d = new Date(unixEpochTimeMS);\r\n      const strDate = d.toLocaleString();\r\n\r\n      searchTid(ordened.tid, coin)\r\n        .then(async res => {\r\n          if (res == 1) {\r\n            const rates = new currency({\r\n              tid: ordened.tid,\r\n              currency: coin,\r\n              price: ordened.price,\r\n              amount: ordened.amount,\r\n              date: strDate,\r\n              epoch: ordened.date\r\n            });\r\n            await rates.save();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  }\r\n}\r\nexport async function saveUsdInBtc(price, date) {\r\n  const rates = new priceUsd({ price: price, date: date });\r\n  await rates.save();\r\n}\r\nexport function usd() {\r\n  let enlace = `/api/equation/btc_in_usd`;\r\n  console.log(enlace);\r\n  let instancia = new LocalBitcoin(enlace);\r\n  instancia.request(enlace).then(res => {\r\n    console.log(res.data.data);\r\n    saveUsdInBtc(res.data.data, Date.now());\r\n  });\r\n}\r\n\r\n/* export function consulta() {\r\n  let equation = [\r\n    \"usd_in_ves\",\r\n    \"usd_in_eur\",\r\n    \"usd_in_rub\",\r\n    \"usd_in_cny\",\r\n    \"btc_in_usd\"\r\n  ];\r\n\r\n  if (j <= equation.length - 1) {\r\n    console.log(equation[j]);\r\n    let equationenlace = `/api/equation/${equation[j]}/`;\r\n    console.log(enlace);\r\n    let instancia = new LocalBitcoin(enlace);\r\n    const consulta = instancia.request(enlace);\r\n\r\n    consulta\r\n      .then(async result => {\r\n        if (result !== undefined) {\r\n          let i = 0;\r\n          const results = result.data;\r\n          console.log(equation.length);\r\n          save(results, i, equation[j]);\r\n          j++;\r\n          query(j);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n */\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562681877473
  },
  "{\"sourceRoot\":\"/home/elias/Escritorio/tasita/Backend/src/modules\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elias/Escritorio/tasita/Backend\",\"filename\":\"/home/elias/Escritorio/tasita/Backend/src/modules/unaunth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elias/Escritorio/tasita/Backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/modules",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elias/Escritorio/tasita/Backend",
      "filename": "/home/elias/Escritorio/tasita/Backend/src/modules/unaunth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elias/Escritorio/tasita/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elias/Escritorio/tasita/Backend/src/modules/unaunth.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elias/Escritorio/tasita/Backend/src/modules/unaunth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/modules",
        "sourceFileName": "unaunth.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LocalBitcoin = void 0;\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar LocalBitcoin =\n/*#__PURE__*/\nfunction () {\n  function LocalBitcoin(apiEndpoint) {\n    _classCallCheck(this, LocalBitcoin);\n\n    this.apiEndpoint = apiEndpoint;\n  }\n\n  _createClass(LocalBitcoin, [{\n    key: \"request\",\n    value: function request(endpoint) {\n      var options = {\n        method: 'GET',\n        url: \"https://localbitcoins.com\" + endpoint\n      };\n      return (0, _axios[\"default\"])(options).then(function (res) {\n        return res;\n      })[\"catch\"](function (err) {\n        console.log('error: ', err.res);\n        return err.res;\n      });\n    }\n  }]);\n\n  return LocalBitcoin;\n}();\n\nexports.LocalBitcoin = LocalBitcoin;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVuYXVudGguanMiXSwibmFtZXMiOlsiTG9jYWxCaXRjb2luIiwiYXBpRW5kcG9pbnQiLCJlbmRwb2ludCIsIm9wdGlvbnMiLCJtZXRob2QiLCJ1cmwiLCJ0aGVuIiwicmVzIiwiZXJyIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOzs7Ozs7Ozs7O0lBRWFBLFk7OztBQUVSLHdCQUFZQyxXQUFaLEVBQXdCO0FBQUE7O0FBRXJCLFNBQUtBLFdBQUwsR0FBbUJBLFdBQW5CO0FBRUQ7Ozs7NEJBRUtDLFEsRUFBUztBQUVmLFVBQU1DLE9BQU8sR0FBRztBQUVoQkMsUUFBQUEsTUFBTSxFQUFFLEtBRlE7QUFHaEJDLFFBQUFBLEdBQUcsRUFBRSw4QkFBOEJIO0FBSG5CLE9BQWhCO0FBT0EsYUFBTyx1QkFBTUMsT0FBTixFQUNMRyxJQURLLENBQ0EsVUFBQUMsR0FBRyxFQUFJO0FBRVQsZUFBT0EsR0FBUDtBQUVILE9BTEssV0FNQSxVQUFBQyxHQUFHLEVBQUc7QUFDVEMsUUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksU0FBWixFQUF1QkYsR0FBRyxDQUFDRCxHQUEzQjtBQUNELGVBQU9DLEdBQUcsQ0FBQ0QsR0FBWDtBQUNELE9BVEssQ0FBUDtBQVVIIiwic291cmNlUm9vdCI6Ii9ob21lL2VsaWFzL0VzY3JpdG9yaW8vdGFzaXRhL0JhY2tlbmQvc3JjL21vZHVsZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnXHJcblxyXG5leHBvcnQgY2xhc3MgTG9jYWxCaXRjb2lue1xyXG5cclxuICAgICBjb25zdHJ1Y3RvcihhcGlFbmRwb2ludCl7XHJcblxyXG4gICAgICAgIHRoaXMuYXBpRW5kcG9pbnQgPSBhcGlFbmRwb2ludFxyXG5cclxuICAgICAgfVxyXG5cclxuICAgIHJlcXVlc3QoZW5kcG9pbnQpe1xyXG5cclxuICAgICAgY29uc3Qgb3B0aW9ucyA9IHtcclxuXHJcbiAgICAgIG1ldGhvZDogJ0dFVCcsXHJcbiAgICAgIHVybDogXCJodHRwczovL2xvY2FsYml0Y29pbnMuY29tXCIgKyBlbmRwb2ludFxyXG5cclxuICAgIH1cclxuXHJcbiAgICAgIHJldHVybiBheGlvcyhvcHRpb25zKVxyXG4gICAgICAgLnRoZW4ocmVzID0+IHtcclxuXHJcbiAgICAgICAgICAgcmV0dXJuIHJlc1xyXG5cclxuICAgICAgIH0pXHJcbiAgICAgIC5jYXRjaChlcnI9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3I6ICcsIGVyci5yZXMpXHJcbiAgICAgICAgIHJldHVybiBlcnIucmVzXHJcbiAgICAgICB9KVxyXG4gIH1cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "unaunth.js"
      ],
      "names": [
        "LocalBitcoin",
        "apiEndpoint",
        "endpoint",
        "options",
        "method",
        "url",
        "then",
        "res",
        "err",
        "console",
        "log"
      ],
      "mappings": ";;;;;;;AAAA;;;;;;;;;;IAEaA,Y;;;AAER,wBAAYC,WAAZ,EAAwB;AAAA;;AAErB,SAAKA,WAAL,GAAmBA,WAAnB;AAED;;;;4BAEKC,Q,EAAS;AAEf,UAAMC,OAAO,GAAG;AAEhBC,QAAAA,MAAM,EAAE,KAFQ;AAGhBC,QAAAA,GAAG,EAAE,8BAA8BH;AAHnB,OAAhB;AAOA,aAAO,uBAAMC,OAAN,EACLG,IADK,CACA,UAAAC,GAAG,EAAI;AAET,eAAOA,GAAP;AAEH,OALK,WAMA,UAAAC,GAAG,EAAG;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAG,CAACD,GAA3B;AACD,eAAOC,GAAG,CAACD,GAAX;AACD,OATK,CAAP;AAUH",
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/modules",
      "sourcesContent": [
        "import axios from 'axios'\r\n\r\nexport class LocalBitcoin{\r\n\r\n     constructor(apiEndpoint){\r\n\r\n        this.apiEndpoint = apiEndpoint\r\n\r\n      }\r\n\r\n    request(endpoint){\r\n\r\n      const options = {\r\n\r\n      method: 'GET',\r\n      url: \"https://localbitcoins.com\" + endpoint\r\n\r\n    }\r\n\r\n      return axios(options)\r\n       .then(res => {\r\n\r\n           return res\r\n\r\n       })\r\n      .catch(err=> {\r\n          console.log('error: ', err.res)\r\n         return err.res\r\n       })\r\n  }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1561477164795
  },
  "{\"sourceRoot\":\"/home/elias/Escritorio/tasita/Backend/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elias/Escritorio/tasita/Backend\",\"filename\":\"/home/elias/Escritorio/tasita/Backend/src/models/currency.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elias/Escritorio/tasita/Backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elias/Escritorio/tasita/Backend",
      "filename": "/home/elias/Escritorio/tasita/Backend/src/models/currency.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elias/Escritorio/tasita/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elias/Escritorio/tasita/Backend/src/models/currency.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elias/Escritorio/tasita/Backend/src/models/currency.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/models",
        "sourceFileName": "currency.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.searchTid = searchTid;\nexports.searchForDate = searchForDate;\nexports.searchInCurrencies = searchInCurrencies;\nexports.priceUsd = exports.currencyChandle = exports.currency = void 0;\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar schema = new Schema({\n  tid: Number,\n  currency: String,\n  price: Number,\n  amount: Number,\n  date: String,\n  epoch: Number\n});\nvar chandleSchema = new Schema({\n  currency: String,\n  opening: Number,\n  closing: Number,\n  min: Number,\n  max: Number,\n  volume: Number,\n  date: String\n});\nvar usd = new Schema({\n  price: Number,\n  date: String\n});\n\nfunction searchTid(ordened, coin) {\n  var search = currency.find({\n    tid: ordened,\n    currency: coin\n  });\n  return search.then(function (res) {\n    if (res.length == 0) {\n      return 1;\n    }\n  });\n}\n\nfunction searchForDate() {\n  var date = new Date();\n  var dd = date.getDate();\n  var mm = date.getMonth() + 1;\n  var yyyy = date.getFullYear();\n  var currency = [\"ves\", \"usd\", \"eur\", \"rub\", \"cny\"];\n\n  if (dd < 10) {\n    dd = \"0\" + dd;\n  }\n\n  if (mm < 10) {\n    mm = \"0\" + mm;\n  }\n\n  var today = yyyy + \"-\" + mm + \"-\" + dd;\n  currency.forEach(function (element) {\n    var search = currencyChandle.find({\n      date: today,\n      currency: element\n    });\n    return search.then(function (res) {\n      if (res.length == 0) {\n        searchInCurrencies(element).then(\n        /*#__PURE__*/\n        function () {\n          var _ref = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee(res) {\n            var rates;\n            return regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    console.log(res);\n                    rates = new currencyChandle({\n                      currency: element,\n                      opening: res.uno.opening,\n                      closing: res.uno.closing,\n                      min: res.dos.min,\n                      max: res.dos.max,\n                      volume: res.tres,\n                      date: today\n                    });\n                    _context.next = 4;\n                    return rates.save();\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      } else if (res.length > 0) {\n        console.log(\"ACTUALIZANDO\");\n        searchInCurrencies(element).then(\n        /*#__PURE__*/\n        function () {\n          var _ref2 = _asyncToGenerator(\n          /*#__PURE__*/\n          regeneratorRuntime.mark(function _callee2(res) {\n            return regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    console.log(res);\n                    _context2.next = 3;\n                    return currencyChandle.updateOne({\n                      date: today,\n                      currency: element\n                    }, {\n                      $set: {\n                        min: res.dos.min,\n                        max: res.dos.max,\n                        closing: res.uno.closing,\n                        volume: res.tres\n                      }\n                    });\n\n                  case 3:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }())[\"catch\"](function (err) {\n          console.log(err);\n        });\n      }\n    });\n  });\n}\n\nfunction searchInCurrencies(coin) {\n  var fecha = new Date();\n  var opening = fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + fecha.getDate() + \" 00:00:00\";\n  var closing = fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + fecha.getDate() + \" 23:59:00\";\n  var volumeDateToday = fecha.getFullYear() + \"-\" + (fecha.getMonth() + 1) + \"-\" + fecha.getDate() + \" \" + fecha.getHours() + \":\" + fecha.getMinutes() + \":\" + fecha.getSeconds();\n  var dateToday = new Date(volumeDateToday);\n  var myDate = dateToday.valueOf() / 1000.0;\n  var epoch1 = new Date(opening);\n  var epoch2 = new Date(closing);\n  var myEpoch1 = epoch1.valueOf() / 1000.0;\n  var myEpoch2 = epoch2.valueOf() / 1000.0;\n  var obj = 0;\n  var obj1 = 0;\n  var max = 0;\n  var completed = {};\n  var vol = 0;\n  var searchOpening = currency.find({\n    $and: [{\n      currency: coin,\n      epoch: {\n        $gte: myEpoch1\n      }\n    }, {\n      epoch: {\n        $lte: myEpoch2\n      }\n    }]\n  }).sort({\n    epoch: 1\n  }).limit(1);\n  return searchOpening.then(function (res) {\n    if (res.length !== 0) {\n      return res;\n    }\n  }).then(function (resp) {\n    var searchClosing = currency.find({\n      $and: [{\n        currency: coin,\n        epoch: {\n          $gte: myEpoch1\n        }\n      }, {\n        epoch: {\n          $lte: myEpoch2\n        }\n      }]\n    }).sort({\n      epoch: -1\n    }).limit(1);\n    return searchClosing.then(function (element) {\n      obj = {\n        opening: resp[0].price,\n        closing: element[element.length - 1].price\n      };\n    });\n  }).then(function () {\n    var searchClosing = currency.find({\n      $and: [{\n        currency: coin,\n        epoch: {\n          $gte: myEpoch1\n        }\n      }, {\n        epoch: {\n          $lte: myEpoch2\n        }\n      }]\n    }).sort({\n      price: -1\n    }).limit(1);\n    return searchClosing.then(function (element) {\n      max = element[0].price;\n    });\n  }).then(function () {\n    var searchClosing = currency.find({\n      $and: [{\n        currency: coin,\n        epoch: {\n          $gte: myEpoch1\n        }\n      }, {\n        epoch: {\n          $lte: myEpoch2\n        }\n      }]\n    }).sort({\n      price: 1\n    }).limit(1);\n    return searchClosing.then(function (element) {\n      obj1 = {\n        max: max,\n        min: element[0].price\n      };\n    });\n  }).then(function () {\n    var volume = currency.aggregate([{\n      $match: {\n        $and: [{\n          epoch: {\n            $lte: myDate\n          }\n        }, {\n          epoch: {\n            $gte: myDate - 86400000\n          },\n          currency: coin\n        }]\n      }\n    }, {\n      $group: {\n        _id: null,\n        sum: {\n          $sum: \"$amount\"\n        }\n      }\n    }]);\n    return volume.then(function (volumen) {\n      vol = volumen[0].sum;\n      return completed = {\n        uno: obj,\n        dos: obj1,\n        tres: vol,\n        cuatro: coin\n      };\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  })[\"catch\"](function (err) {\n    console.log(err);\n  });\n}\n\nvar currency = _mongoose[\"default\"].model(\"currency\", schema);\n\nexports.currency = currency;\n\nvar currencyChandle = _mongoose[\"default\"].model(\"currencyChandle\", chandleSchema);\n\nexports.currencyChandle = currencyChandle;\n\nvar priceUsd = _mongoose[\"default\"].model(\"priceusd\", usd);\n\nexports.priceUsd = priceUsd;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "currency.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "schema",
        "tid",
        "Number",
        "currency",
        "String",
        "price",
        "amount",
        "date",
        "epoch",
        "chandleSchema",
        "opening",
        "closing",
        "min",
        "max",
        "volume",
        "usd",
        "searchTid",
        "ordened",
        "coin",
        "search",
        "find",
        "then",
        "res",
        "length",
        "searchForDate",
        "Date",
        "dd",
        "getDate",
        "mm",
        "getMonth",
        "yyyy",
        "getFullYear",
        "today",
        "forEach",
        "element",
        "currencyChandle",
        "searchInCurrencies",
        "console",
        "log",
        "rates",
        "uno",
        "dos",
        "tres",
        "save",
        "updateOne",
        "$set",
        "err",
        "fecha",
        "volumeDateToday",
        "getHours",
        "getMinutes",
        "getSeconds",
        "dateToday",
        "myDate",
        "valueOf",
        "epoch1",
        "epoch2",
        "myEpoch1",
        "myEpoch2",
        "obj",
        "obj1",
        "completed",
        "vol",
        "searchOpening",
        "$and",
        "$gte",
        "$lte",
        "sort",
        "limit",
        "resp",
        "searchClosing",
        "aggregate",
        "$match",
        "$group",
        "_id",
        "sum",
        "$sum",
        "volumen",
        "cuatro",
        "model",
        "priceUsd"
      ],
      "mappings": "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",
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/models",
      "sourcesContent": [
        "import mongoose from \"mongoose\";\r\nconst Schema = mongoose.Schema;\r\n\r\nconst schema = new Schema({\r\n  tid: Number,\r\n  currency: String,\r\n  price: Number,\r\n  amount: Number,\r\n  date: String,\r\n  epoch: Number\r\n});\r\n\r\nconst chandleSchema = new Schema({\r\n  currency: String,\r\n  opening: Number,\r\n  closing: Number,\r\n  min: Number,\r\n  max: Number,\r\n  volume: Number,\r\n  date: String\r\n});\r\n\r\nconst usd = new Schema({\r\n  price: Number,\r\n  date: String\r\n});\r\n\r\nexport function searchTid(ordened, coin) {\r\n  const search = currency.find({ tid: ordened, currency: coin });\r\n  return search.then(res => {\r\n    if (res.length == 0) {\r\n      return 1;\r\n    }\r\n  });\r\n}\r\n\r\nexport function searchForDate() {\r\n  let date = new Date();\r\n  let dd = date.getDate();\r\n  let mm = date.getMonth() + 1;\r\n  let yyyy = date.getFullYear();\r\n  let currency = [\"ves\", \"usd\", \"eur\", \"rub\", \"cny\"];\r\n\r\n  if (dd < 10) {\r\n    dd = \"0\" + dd;\r\n  }\r\n\r\n  if (mm < 10) {\r\n    mm = \"0\" + mm;\r\n  }\r\n\r\n  let today = yyyy + \"-\" + mm + \"-\" + dd;\r\n\r\n  currency.forEach(element => {\r\n    const search = currencyChandle.find({ date: today, currency: element });\r\n    return search.then(res => {\r\n      if (res.length == 0) {\r\n        searchInCurrencies(element).then(async res => {\r\n          console.log(res);\r\n          const rates = new currencyChandle({\r\n            currency: element,\r\n            opening: res.uno.opening,\r\n            closing: res.uno.closing,\r\n            min: res.dos.min,\r\n            max: res.dos.max,\r\n            volume: res.tres,\r\n            date: today\r\n          });\r\n          await rates.save();\r\n        });\r\n      } else if (res.length > 0) {\r\n        console.log(\"ACTUALIZANDO\");\r\n        searchInCurrencies(element)\r\n          .then(async res => {\r\n            console.log(res);\r\n            await currencyChandle.updateOne(\r\n              { date: today, currency: element },\r\n              {\r\n                $set: {\r\n                  min: res.dos.min,\r\n                  max: res.dos.max,\r\n                  closing: res.uno.closing,\r\n                  volume: res.tres\r\n                }\r\n              }\r\n            );\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nexport function searchInCurrencies(coin) {\r\n  let fecha = new Date();\r\n  let opening =\r\n    fecha.getFullYear() +\r\n    \"-\" +\r\n    (fecha.getMonth() + 1) +\r\n    \"-\" +\r\n    fecha.getDate() +\r\n    \" 00:00:00\";\r\n  let closing =\r\n    fecha.getFullYear() +\r\n    \"-\" +\r\n    (fecha.getMonth() + 1) +\r\n    \"-\" +\r\n    fecha.getDate() +\r\n    \" 23:59:00\";\r\n  let volumeDateToday =\r\n    fecha.getFullYear() +\r\n    \"-\" +\r\n    (fecha.getMonth() + 1) +\r\n    \"-\" +\r\n    fecha.getDate() +\r\n    \" \" +\r\n    fecha.getHours() +\r\n    \":\" +\r\n    fecha.getMinutes() +\r\n    \":\" +\r\n    fecha.getSeconds();\r\n  let dateToday = new Date(volumeDateToday);\r\n  let myDate = dateToday.valueOf() / 1000.0;\r\n\r\n  let epoch1 = new Date(opening);\r\n  let epoch2 = new Date(closing);\r\n  let myEpoch1 = epoch1.valueOf() / 1000.0;\r\n  let myEpoch2 = epoch2.valueOf() / 1000.0;\r\n  let obj = 0;\r\n  let obj1 = 0;\r\n  let max = 0;\r\n  let completed = {};\r\n  let vol = 0;\r\n\r\n  const searchOpening = currency\r\n    .find({\r\n      $and: [\r\n        { currency: coin, epoch: { $gte: myEpoch1 } },\r\n        { epoch: { $lte: myEpoch2 } }\r\n      ]\r\n    })\r\n    .sort({ epoch: 1 })\r\n    .limit(1);\r\n  return searchOpening\r\n    .then(res => {\r\n      if (res.length !== 0) {\r\n        return res;\r\n      }\r\n    })\r\n    .then(resp => {\r\n      const searchClosing = currency\r\n        .find({\r\n          $and: [\r\n            { currency: coin, epoch: { $gte: myEpoch1 } },\r\n            { epoch: { $lte: myEpoch2 } }\r\n          ]\r\n        })\r\n        .sort({ epoch: -1 })\r\n        .limit(1);\r\n      return searchClosing.then(element => {\r\n        obj = {\r\n          opening: resp[0].price,\r\n          closing: element[element.length - 1].price\r\n        };\r\n      });\r\n    })\r\n    .then(() => {\r\n      const searchClosing = currency\r\n        .find({\r\n          $and: [\r\n            { currency: coin, epoch: { $gte: myEpoch1 } },\r\n            { epoch: { $lte: myEpoch2 } }\r\n          ]\r\n        })\r\n        .sort({ price: -1 })\r\n        .limit(1);\r\n      return searchClosing.then(element => {\r\n        max = element[0].price;\r\n      });\r\n    })\r\n    .then(() => {\r\n      const searchClosing = currency\r\n        .find({\r\n          $and: [\r\n            { currency: coin, epoch: { $gte: myEpoch1 } },\r\n            { epoch: { $lte: myEpoch2 } }\r\n          ]\r\n        })\r\n        .sort({ price: 1 })\r\n        .limit(1);\r\n      return searchClosing.then(element => {\r\n        obj1 = {\r\n          max: max,\r\n          min: element[0].price\r\n        };\r\n      });\r\n    })\r\n    .then(() => {\r\n      let volume = currency.aggregate([\r\n        {\r\n          $match: {\r\n            $and: [\r\n              { epoch: { $lte: myDate } },\r\n              { epoch: { $gte: myDate - 86400000 }, currency: coin }\r\n            ]\r\n          }\r\n        },\r\n        { $group: { _id: null, sum: { $sum: \"$amount\" } } }\r\n      ]);\r\n\r\n      return volume\r\n        .then(volumen => {\r\n          vol = volumen[0].sum;\r\n          return (completed = {\r\n            uno: obj,\r\n            dos: obj1,\r\n            tres: vol,\r\n            cuatro: coin\r\n          });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n}\r\n\r\nexport const currency = mongoose.model(\"currency\", schema);\r\nexport const currencyChandle = mongoose.model(\"currencyChandle\", chandleSchema);\r\nexport const priceUsd = mongoose.model(\"priceusd\", usd);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1562682570474
  },
  "{\"sourceRoot\":\"/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elias/Escritorio/tasita/Backend\",\"filename\":\"/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema/schema.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elias/Escritorio/tasita/Backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elias/Escritorio/tasita/Backend",
      "filename": "/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema/schema.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elias/Escritorio/tasita/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema/schema.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema/schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _currency = require(\"../../models/currency\");\n\nvar _graphql = require(\"graphql\");\n\nvar currencyType = new _graphql.GraphQLObjectType({\n  name: \"currencys\",\n  fields: function fields() {\n    return {\n      id: {\n        type: _graphql.GraphQLID\n      },\n      tid: {\n        type: _graphql.GraphQLInt\n      },\n      currency: {\n        type: _graphql.GraphQLString\n      },\n      price: {\n        type: _graphql.GraphQLFloat\n      },\n      amount: {\n        type: _graphql.GraphQLFloat\n      },\n      date: {\n        type: _graphql.GraphQLFloat\n      },\n      epoch: {\n        type: _graphql.GraphQLInt\n      }\n    };\n  }\n});\nvar currencychandletype = new _graphql.GraphQLObjectType({\n  name: \"currencyChandle\",\n  fields: function fields() {\n    return {\n      id: {\n        type: _graphql.GraphQLID\n      },\n      currency: {\n        type: _graphql.GraphQLString\n      },\n      opening: {\n        type: _graphql.GraphQLFloat\n      },\n      closing: {\n        type: _graphql.GraphQLFloat\n      },\n      min: {\n        type: _graphql.GraphQLFloat\n      },\n      max: {\n        type: _graphql.GraphQLFloat\n      },\n      volume: {\n        type: _graphql.GraphQLFloat\n      },\n      date: {\n        type: _graphql.GraphQLString\n      }\n    };\n  }\n});\nvar priceUsdType = new _graphql.GraphQLObjectType({\n  name: \"priceUsd\",\n  fields: function fields() {\n    return {\n      id: {\n        type: _graphql.GraphQLID\n      },\n      price: {\n        type: _graphql.GraphQLFloat\n      },\n      date: {\n        type: _graphql.GraphQLString\n      }\n    };\n  }\n});\nvar RootQuery = new _graphql.GraphQLObjectType({\n  name: \"RootQueryType\",\n  fields: {\n    currencys: {\n      type: new _graphql.GraphQLList(currencyType),\n      resolve: function resolve(parent, args) {\n        return _currency.currency.find();\n      }\n    },\n    currencyChandle: {\n      type: new _graphql.GraphQLList(currencychandletype),\n      resolve: function resolve(parent, args) {\n        return _currency.currencyChandle.find();\n      }\n    },\n    priceUsd: {\n      type: new _graphql.GraphQLList(priceUsdType),\n      resolve: function resolve(parent, args) {\n        return _currency.priceUsd.find();\n      }\n    }\n  }\n});\nmodule.exports = new _graphql.GraphQLSchema({\n  query: RootQuery\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJjdXJyZW5jeVR5cGUiLCJHcmFwaFFMT2JqZWN0VHlwZSIsIm5hbWUiLCJmaWVsZHMiLCJpZCIsInR5cGUiLCJHcmFwaFFMSUQiLCJ0aWQiLCJHcmFwaFFMSW50IiwiY3VycmVuY3kiLCJHcmFwaFFMU3RyaW5nIiwicHJpY2UiLCJHcmFwaFFMRmxvYXQiLCJhbW91bnQiLCJkYXRlIiwiZXBvY2giLCJjdXJyZW5jeWNoYW5kbGV0eXBlIiwib3BlbmluZyIsImNsb3NpbmciLCJtaW4iLCJtYXgiLCJ2b2x1bWUiLCJwcmljZVVzZFR5cGUiLCJSb290UXVlcnkiLCJjdXJyZW5jeXMiLCJHcmFwaFFMTGlzdCIsInJlc29sdmUiLCJwYXJlbnQiLCJhcmdzIiwiZmluZCIsImN1cnJlbmN5Q2hhbmRsZSIsInByaWNlVXNkIiwibW9kdWxlIiwiZXhwb3J0cyIsIkdyYXBoUUxTY2hlbWEiLCJxdWVyeSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFFQTs7QUFVQSxJQUFNQSxZQUFZLEdBQUcsSUFBSUMsMEJBQUosQ0FBc0I7QUFDekNDLEVBQUFBLElBQUksRUFBRSxXQURtQztBQUV6Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQUEsV0FBTztBQUNiQyxNQUFBQSxFQUFFLEVBQUU7QUFBRUMsUUFBQUEsSUFBSSxFQUFFQztBQUFSLE9BRFM7QUFFYkMsTUFBQUEsR0FBRyxFQUFFO0FBQUVGLFFBQUFBLElBQUksRUFBRUc7QUFBUixPQUZRO0FBR2JDLE1BQUFBLFFBQVEsRUFBRTtBQUFFSixRQUFBQSxJQUFJLEVBQUVLO0FBQVIsT0FIRztBQUliQyxNQUFBQSxLQUFLLEVBQUU7QUFBRU4sUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BSk07QUFLYkMsTUFBQUEsTUFBTSxFQUFFO0FBQUVSLFFBQUFBLElBQUksRUFBRU87QUFBUixPQUxLO0FBTWJFLE1BQUFBLElBQUksRUFBRTtBQUFFVCxRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FOTztBQU9iRyxNQUFBQSxLQUFLLEVBQUU7QUFBRVYsUUFBQUEsSUFBSSxFQUFFRztBQUFSO0FBUE0sS0FBUDtBQUFBO0FBRmlDLENBQXRCLENBQXJCO0FBYUEsSUFBTVEsbUJBQW1CLEdBQUcsSUFBSWYsMEJBQUosQ0FBc0I7QUFDaERDLEVBQUFBLElBQUksRUFBRSxpQkFEMEM7QUFFaERDLEVBQUFBLE1BQU0sRUFBRTtBQUFBLFdBQU87QUFDYkMsTUFBQUEsRUFBRSxFQUFFO0FBQUVDLFFBQUFBLElBQUksRUFBRUM7QUFBUixPQURTO0FBRWJHLE1BQUFBLFFBQVEsRUFBRTtBQUFFSixRQUFBQSxJQUFJLEVBQUVLO0FBQVIsT0FGRztBQUdiTyxNQUFBQSxPQUFPLEVBQUU7QUFBRVosUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BSEk7QUFJYk0sTUFBQUEsT0FBTyxFQUFFO0FBQUViLFFBQUFBLElBQUksRUFBRU87QUFBUixPQUpJO0FBS2JPLE1BQUFBLEdBQUcsRUFBRTtBQUFFZCxRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FMUTtBQU1iUSxNQUFBQSxHQUFHLEVBQUU7QUFBRWYsUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BTlE7QUFPYlMsTUFBQUEsTUFBTSxFQUFFO0FBQUVoQixRQUFBQSxJQUFJLEVBQUVPO0FBQVIsT0FQSztBQVFiRSxNQUFBQSxJQUFJLEVBQUU7QUFBRVQsUUFBQUEsSUFBSSxFQUFFSztBQUFSO0FBUk8sS0FBUDtBQUFBO0FBRndDLENBQXRCLENBQTVCO0FBY0EsSUFBTVksWUFBWSxHQUFHLElBQUlyQiwwQkFBSixDQUFzQjtBQUN6Q0MsRUFBQUEsSUFBSSxFQUFFLFVBRG1DO0FBRXpDQyxFQUFBQSxNQUFNLEVBQUU7QUFBQSxXQUFPO0FBQ2JDLE1BQUFBLEVBQUUsRUFBRTtBQUFFQyxRQUFBQSxJQUFJLEVBQUVDO0FBQVIsT0FEUztBQUViSyxNQUFBQSxLQUFLLEVBQUU7QUFBRU4sUUFBQUEsSUFBSSxFQUFFTztBQUFSLE9BRk07QUFHYkUsTUFBQUEsSUFBSSxFQUFFO0FBQUVULFFBQUFBLElBQUksRUFBRUs7QUFBUjtBQUhPLEtBQVA7QUFBQTtBQUZpQyxDQUF0QixDQUFyQjtBQVNBLElBQU1hLFNBQVMsR0FBRyxJQUFJdEIsMEJBQUosQ0FBc0I7QUFDdENDLEVBQUFBLElBQUksRUFBRSxlQURnQztBQUV0Q0MsRUFBQUEsTUFBTSxFQUFFO0FBQ05xQixJQUFBQSxTQUFTLEVBQUU7QUFDVG5CLE1BQUFBLElBQUksRUFBRSxJQUFJb0Isb0JBQUosQ0FBZ0J6QixZQUFoQixDQURHO0FBRVQwQixNQUFBQSxPQUZTLG1CQUVEQyxNQUZDLEVBRU9DLElBRlAsRUFFYTtBQUNwQixlQUFPbkIsbUJBQVNvQixJQUFULEVBQVA7QUFDRDtBQUpRLEtBREw7QUFPTkMsSUFBQUEsZUFBZSxFQUFFO0FBQ2Z6QixNQUFBQSxJQUFJLEVBQUUsSUFBSW9CLG9CQUFKLENBQWdCVCxtQkFBaEIsQ0FEUztBQUVmVSxNQUFBQSxPQUZlLG1CQUVQQyxNQUZPLEVBRUNDLElBRkQsRUFFTztBQUNwQixlQUFPRSwwQkFBZ0JELElBQWhCLEVBQVA7QUFDRDtBQUpjLEtBUFg7QUFhTkUsSUFBQUEsUUFBUSxFQUFFO0FBQ1IxQixNQUFBQSxJQUFJLEVBQUUsSUFBSW9CLG9CQUFKLENBQWdCSCxZQUFoQixDQURFO0FBRVJJLE1BQUFBLE9BRlEsbUJBRUFDLE1BRkEsRUFFUUMsSUFGUixFQUVjO0FBQ3BCLGVBQU9HLG1CQUFTRixJQUFULEVBQVA7QUFDRDtBQUpPO0FBYko7QUFGOEIsQ0FBdEIsQ0FBbEI7QUF3QkFHLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixJQUFJQyxzQkFBSixDQUFrQjtBQUNqQ0MsRUFBQUEsS0FBSyxFQUFFWjtBQUQwQixDQUFsQixDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9lbGlhcy9Fc2NyaXRvcmlvL3Rhc2l0YS9CYWNrZW5kL3NyYy9HcmFwaHFsL1NjaGVtYSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGN1cnJlbmN5LCBjdXJyZW5jeUNoYW5kbGUsIHByaWNlVXNkIH0gZnJvbSBcIi4uLy4uL21vZGVscy9jdXJyZW5jeVwiO1xyXG5cclxuaW1wb3J0IHtcclxuICBHcmFwaFFMT2JqZWN0VHlwZSxcclxuICBHcmFwaFFMU3RyaW5nLFxyXG4gIEdyYXBoUUxTY2hlbWEsXHJcbiAgR3JhcGhRTElELFxyXG4gIEdyYXBoUUxMaXN0LFxyXG4gIEdyYXBoUUxGbG9hdCxcclxuICBHcmFwaFFMSW50XHJcbn0gZnJvbSBcImdyYXBocWxcIjtcclxuXHJcbmNvbnN0IGN1cnJlbmN5VHlwZSA9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7XHJcbiAgbmFtZTogXCJjdXJyZW5jeXNcIixcclxuICBmaWVsZHM6ICgpID0+ICh7XHJcbiAgICBpZDogeyB0eXBlOiBHcmFwaFFMSUQgfSxcclxuICAgIHRpZDogeyB0eXBlOiBHcmFwaFFMSW50IH0sXHJcbiAgICBjdXJyZW5jeTogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXHJcbiAgICBwcmljZTogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcclxuICAgIGFtb3VudDogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcclxuICAgIGRhdGU6IHsgdHlwZTogR3JhcGhRTEZsb2F0IH0sXHJcbiAgICBlcG9jaDogeyB0eXBlOiBHcmFwaFFMSW50IH1cclxuICB9KVxyXG59KTtcclxuXHJcbmNvbnN0IGN1cnJlbmN5Y2hhbmRsZXR5cGUgPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoe1xyXG4gIG5hbWU6IFwiY3VycmVuY3lDaGFuZGxlXCIsXHJcbiAgZmllbGRzOiAoKSA9PiAoe1xyXG4gICAgaWQ6IHsgdHlwZTogR3JhcGhRTElEIH0sXHJcbiAgICBjdXJyZW5jeTogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXHJcbiAgICBvcGVuaW5nOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxyXG4gICAgY2xvc2luZzogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcclxuICAgIG1pbjogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcclxuICAgIG1heDogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcclxuICAgIHZvbHVtZTogeyB0eXBlOiBHcmFwaFFMRmxvYXQgfSxcclxuICAgIGRhdGU6IHsgdHlwZTogR3JhcGhRTFN0cmluZyB9XHJcbiAgfSlcclxufSk7XHJcblxyXG5jb25zdCBwcmljZVVzZFR5cGUgPSBuZXcgR3JhcGhRTE9iamVjdFR5cGUoe1xyXG4gIG5hbWU6IFwicHJpY2VVc2RcIixcclxuICBmaWVsZHM6ICgpID0+ICh7XHJcbiAgICBpZDogeyB0eXBlOiBHcmFwaFFMSUQgfSxcclxuICAgIHByaWNlOiB7IHR5cGU6IEdyYXBoUUxGbG9hdCB9LFxyXG4gICAgZGF0ZTogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH1cclxuICB9KVxyXG59KTtcclxuXHJcbmNvbnN0IFJvb3RRdWVyeSA9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7XHJcbiAgbmFtZTogXCJSb290UXVlcnlUeXBlXCIsXHJcbiAgZmllbGRzOiB7XHJcbiAgICBjdXJyZW5jeXM6IHtcclxuICAgICAgdHlwZTogbmV3IEdyYXBoUUxMaXN0KGN1cnJlbmN5VHlwZSksXHJcbiAgICAgIHJlc29sdmUocGFyZW50LCBhcmdzKSB7XHJcbiAgICAgICAgcmV0dXJuIGN1cnJlbmN5LmZpbmQoKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGN1cnJlbmN5Q2hhbmRsZToge1xyXG4gICAgICB0eXBlOiBuZXcgR3JhcGhRTExpc3QoY3VycmVuY3ljaGFuZGxldHlwZSksXHJcbiAgICAgIHJlc29sdmUocGFyZW50LCBhcmdzKSB7XHJcbiAgICAgICAgcmV0dXJuIGN1cnJlbmN5Q2hhbmRsZS5maW5kKCk7XHJcbiAgICAgIH1cclxuICAgIH0sXHJcbiAgICBwcmljZVVzZDoge1xyXG4gICAgICB0eXBlOiBuZXcgR3JhcGhRTExpc3QocHJpY2VVc2RUeXBlKSxcclxuICAgICAgcmVzb2x2ZShwYXJlbnQsIGFyZ3MpIHtcclxuICAgICAgICByZXR1cm4gcHJpY2VVc2QuZmluZCgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IEdyYXBoUUxTY2hlbWEoe1xyXG4gIHF1ZXJ5OiBSb290UXVlcnlcclxufSk7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "currencyType",
        "GraphQLObjectType",
        "name",
        "fields",
        "id",
        "type",
        "GraphQLID",
        "tid",
        "GraphQLInt",
        "currency",
        "GraphQLString",
        "price",
        "GraphQLFloat",
        "amount",
        "date",
        "epoch",
        "currencychandletype",
        "opening",
        "closing",
        "min",
        "max",
        "volume",
        "priceUsdType",
        "RootQuery",
        "currencys",
        "GraphQLList",
        "resolve",
        "parent",
        "args",
        "find",
        "currencyChandle",
        "priceUsd",
        "module",
        "exports",
        "GraphQLSchema",
        "query"
      ],
      "mappings": "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",
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/Graphql/Schema",
      "sourcesContent": [
        "import { currency, currencyChandle, priceUsd } from \"../../models/currency\";\r\n\r\nimport {\r\n  GraphQLObjectType,\r\n  GraphQLString,\r\n  GraphQLSchema,\r\n  GraphQLID,\r\n  GraphQLList,\r\n  GraphQLFloat,\r\n  GraphQLInt\r\n} from \"graphql\";\r\n\r\nconst currencyType = new GraphQLObjectType({\r\n  name: \"currencys\",\r\n  fields: () => ({\r\n    id: { type: GraphQLID },\r\n    tid: { type: GraphQLInt },\r\n    currency: { type: GraphQLString },\r\n    price: { type: GraphQLFloat },\r\n    amount: { type: GraphQLFloat },\r\n    date: { type: GraphQLFloat },\r\n    epoch: { type: GraphQLInt }\r\n  })\r\n});\r\n\r\nconst currencychandletype = new GraphQLObjectType({\r\n  name: \"currencyChandle\",\r\n  fields: () => ({\r\n    id: { type: GraphQLID },\r\n    currency: { type: GraphQLString },\r\n    opening: { type: GraphQLFloat },\r\n    closing: { type: GraphQLFloat },\r\n    min: { type: GraphQLFloat },\r\n    max: { type: GraphQLFloat },\r\n    volume: { type: GraphQLFloat },\r\n    date: { type: GraphQLString }\r\n  })\r\n});\r\n\r\nconst priceUsdType = new GraphQLObjectType({\r\n  name: \"priceUsd\",\r\n  fields: () => ({\r\n    id: { type: GraphQLID },\r\n    price: { type: GraphQLFloat },\r\n    date: { type: GraphQLString }\r\n  })\r\n});\r\n\r\nconst RootQuery = new GraphQLObjectType({\r\n  name: \"RootQueryType\",\r\n  fields: {\r\n    currencys: {\r\n      type: new GraphQLList(currencyType),\r\n      resolve(parent, args) {\r\n        return currency.find();\r\n      }\r\n    },\r\n    currencyChandle: {\r\n      type: new GraphQLList(currencychandletype),\r\n      resolve(parent, args) {\r\n        return currencyChandle.find();\r\n      }\r\n    },\r\n    priceUsd: {\r\n      type: new GraphQLList(priceUsdType),\r\n      resolve(parent, args) {\r\n        return priceUsd.find();\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nmodule.exports = new GraphQLSchema({\r\n  query: RootQuery\r\n});\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1563374759170
  },
  "{\"sourceRoot\":\"/home/elias/Escritorio/tasita/Backend/src/models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/elias/Escritorio/tasita/Backend\",\"filename\":\"/home/elias/Escritorio/tasita/Backend/src/models/rates.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/elias/Escritorio/tasita/Backend\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.5.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/elias/Escritorio/tasita/Backend",
      "filename": "/home/elias/Escritorio/tasita/Backend/src/models/rates.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/elias/Escritorio/tasita/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/elias/Escritorio/tasita/Backend/src/models/rates.js",
        "plugins": [
          "dynamicImport",
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/elias/Escritorio/tasita/Backend/src/models/rates.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/models",
        "sourceFileName": "rates.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _mongoose = _interopRequireDefault(require(\"mongoose\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar Schema = _mongoose[\"default\"].Schema;\nvar ratesSchema = new Schema({\n  currency: String,\n  weightedAverageBuy: Number,\n  minbuy: Number,\n  maxbuy: Number,\n  buyVolume: Number,\n  minsell: Number,\n  maxsell: Number,\n  weightedAverageSell: Number,\n  sellVolume: Number,\n  volumeBTC: Number,\n  date: Date\n}, {\n  collection: 'rates'\n});\nvar vesSchema = new Schema({\n  tid: Number,\n  currency: String,\n  price: Number,\n  amount: Number,\n  date: String,\n  epoch: Number\n}, {\n  collection: 'ves'\n});\nvar usdSchema = new Schema({\n  tid: Number,\n  currency: String,\n  price: Number,\n  amount: Number,\n  date: String,\n  epoch: Number\n}, {\n  collection: 'usd'\n});\nvar eurSchema = new Schema({\n  tid: Number,\n  currency: String,\n  price: Number,\n  amount: Number,\n  date: String,\n  epoch: Number\n}, {\n  collection: 'eur'\n});\nmodule.exports = _mongoose[\"default\"].model('rates', ratesSchema);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJhdGVzLmpzIl0sIm5hbWVzIjpbIlNjaGVtYSIsIm1vbmdvb3NlIiwicmF0ZXNTY2hlbWEiLCJjdXJyZW5jeSIsIlN0cmluZyIsIndlaWdodGVkQXZlcmFnZUJ1eSIsIk51bWJlciIsIm1pbmJ1eSIsIm1heGJ1eSIsImJ1eVZvbHVtZSIsIm1pbnNlbGwiLCJtYXhzZWxsIiwid2VpZ2h0ZWRBdmVyYWdlU2VsbCIsInNlbGxWb2x1bWUiLCJ2b2x1bWVCVEMiLCJkYXRlIiwiRGF0ZSIsImNvbGxlY3Rpb24iLCJ2ZXNTY2hlbWEiLCJ0aWQiLCJwcmljZSIsImFtb3VudCIsImVwb2NoIiwidXNkU2NoZW1hIiwiZXVyU2NoZW1hIiwibW9kdWxlIiwiZXhwb3J0cyIsIm1vZGVsIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBQ0EsSUFBTUEsTUFBTSxHQUFHQyxxQkFBU0QsTUFBeEI7QUFFQSxJQUFNRSxXQUFXLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQzNCRyxFQUFBQSxRQUFRLEVBQUVDLE1BRGlCO0FBRTNCQyxFQUFBQSxrQkFBa0IsRUFBRUMsTUFGTztBQUczQkMsRUFBQUEsTUFBTSxFQUFFRCxNQUhtQjtBQUkzQkUsRUFBQUEsTUFBTSxFQUFFRixNQUptQjtBQUszQkcsRUFBQUEsU0FBUyxFQUFHSCxNQUxlO0FBTTNCSSxFQUFBQSxPQUFPLEVBQUVKLE1BTmtCO0FBTzNCSyxFQUFBQSxPQUFPLEVBQUVMLE1BUGtCO0FBUTNCTSxFQUFBQSxtQkFBbUIsRUFBRU4sTUFSTTtBQVMzQk8sRUFBQUEsVUFBVSxFQUFFUCxNQVRlO0FBVTNCUSxFQUFBQSxTQUFTLEVBQUVSLE1BVmdCO0FBVzNCUyxFQUFBQSxJQUFJLEVBQUVDO0FBWHFCLENBQVgsRUFZbEI7QUFBQ0MsRUFBQUEsVUFBVSxFQUFFO0FBQWIsQ0Faa0IsQ0FBcEI7QUFjQSxJQUFNQyxTQUFTLEdBQUcsSUFBSWxCLE1BQUosQ0FBVztBQUN6Qm1CLEVBQUFBLEdBQUcsRUFBRWIsTUFEb0I7QUFFekJILEVBQUFBLFFBQVEsRUFBRUMsTUFGZTtBQUd6QmdCLEVBQUFBLEtBQUssRUFBRWQsTUFIa0I7QUFJekJlLEVBQUFBLE1BQU0sRUFBRWYsTUFKaUI7QUFLekJTLEVBQUFBLElBQUksRUFBRVgsTUFMbUI7QUFNekJrQixFQUFBQSxLQUFLLEVBQUVoQjtBQU5rQixDQUFYLEVBT2hCO0FBQUNXLEVBQUFBLFVBQVUsRUFBRTtBQUFiLENBUGdCLENBQWxCO0FBU0EsSUFBTU0sU0FBUyxHQUFHLElBQUl2QixNQUFKLENBQVc7QUFDekJtQixFQUFBQSxHQUFHLEVBQUViLE1BRG9CO0FBRXpCSCxFQUFBQSxRQUFRLEVBQUVDLE1BRmU7QUFHekJnQixFQUFBQSxLQUFLLEVBQUVkLE1BSGtCO0FBSXpCZSxFQUFBQSxNQUFNLEVBQUVmLE1BSmlCO0FBS3pCUyxFQUFBQSxJQUFJLEVBQUVYLE1BTG1CO0FBTXpCa0IsRUFBQUEsS0FBSyxFQUFFaEI7QUFOa0IsQ0FBWCxFQU9oQjtBQUFDVyxFQUFBQSxVQUFVLEVBQUU7QUFBYixDQVBnQixDQUFsQjtBQVNBLElBQU1PLFNBQVMsR0FBRyxJQUFJeEIsTUFBSixDQUFXO0FBQ3pCbUIsRUFBQUEsR0FBRyxFQUFFYixNQURvQjtBQUV6QkgsRUFBQUEsUUFBUSxFQUFFQyxNQUZlO0FBR3pCZ0IsRUFBQUEsS0FBSyxFQUFFZCxNQUhrQjtBQUl6QmUsRUFBQUEsTUFBTSxFQUFFZixNQUppQjtBQUt6QlMsRUFBQUEsSUFBSSxFQUFFWCxNQUxtQjtBQU16QmtCLEVBQUFBLEtBQUssRUFBRWhCO0FBTmtCLENBQVgsRUFPaEI7QUFBQ1csRUFBQUEsVUFBVSxFQUFFO0FBQWIsQ0FQZ0IsQ0FBbEI7QUFTQVEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCekIscUJBQVMwQixLQUFULENBQWUsT0FBZixFQUF3QnpCLFdBQXhCLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL2VsaWFzL0VzY3JpdG9yaW8vdGFzaXRhL0JhY2tlbmQvc3JjL21vZGVscyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tICdtb25nb29zZSdcclxuY29uc3QgU2NoZW1hID0gbW9uZ29vc2UuU2NoZW1hO1xyXG5cclxuY29uc3QgcmF0ZXNTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIGN1cnJlbmN5OiBTdHJpbmcsXHJcbiAgICB3ZWlnaHRlZEF2ZXJhZ2VCdXk6IE51bWJlcixcclxuICAgIG1pbmJ1eTogTnVtYmVyLFxyXG4gICAgbWF4YnV5OiBOdW1iZXIsXHJcbiAgICBidXlWb2x1bWUgOiBOdW1iZXIsXHJcbiAgICBtaW5zZWxsOiBOdW1iZXIsXHJcbiAgICBtYXhzZWxsOiBOdW1iZXIsXHJcbiAgICB3ZWlnaHRlZEF2ZXJhZ2VTZWxsOiBOdW1iZXIsXHJcbiAgICBzZWxsVm9sdW1lOiBOdW1iZXIsXHJcbiAgICB2b2x1bWVCVEM6IE51bWJlcixcclxuICAgIGRhdGU6IERhdGVcclxufSx7Y29sbGVjdGlvbjogJ3JhdGVzJyB9KTtcclxuXHJcbmNvbnN0IHZlc1NjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gICAgdGlkOiBOdW1iZXIsXHJcbiAgICBjdXJyZW5jeTogU3RyaW5nLFxyXG4gICAgcHJpY2U6IE51bWJlcixcclxuICAgIGFtb3VudDogTnVtYmVyLFxyXG4gICAgZGF0ZTogU3RyaW5nLFxyXG4gICAgZXBvY2g6IE51bWJlciBcclxufSx7Y29sbGVjdGlvbjogJ3ZlcycgfSk7XHJcblxyXG5jb25zdCB1c2RTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIHRpZDogTnVtYmVyLFxyXG4gICAgY3VycmVuY3k6IFN0cmluZyxcclxuICAgIHByaWNlOiBOdW1iZXIsXHJcbiAgICBhbW91bnQ6IE51bWJlcixcclxuICAgIGRhdGU6IFN0cmluZyxcclxuICAgIGVwb2NoOiBOdW1iZXJcclxufSx7Y29sbGVjdGlvbjogJ3VzZCd9KTtcclxuXHJcbmNvbnN0IGV1clNjaGVtYSA9IG5ldyBTY2hlbWEoe1xyXG4gICAgdGlkOiBOdW1iZXIsXHJcbiAgICBjdXJyZW5jeTogU3RyaW5nLFxyXG4gICAgcHJpY2U6IE51bWJlcixcclxuICAgIGFtb3VudDogTnVtYmVyLFxyXG4gICAgZGF0ZTogU3RyaW5nLFxyXG4gICAgZXBvY2g6IE51bWJlclxyXG59LHtjb2xsZWN0aW9uOiAnZXVyJ30pO1xyXG4gXHJcbm1vZHVsZS5leHBvcnRzID0gbW9uZ29vc2UubW9kZWwoJ3JhdGVzJywgcmF0ZXNTY2hlbWEpO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "rates.js"
      ],
      "names": [
        "Schema",
        "mongoose",
        "ratesSchema",
        "currency",
        "String",
        "weightedAverageBuy",
        "Number",
        "minbuy",
        "maxbuy",
        "buyVolume",
        "minsell",
        "maxsell",
        "weightedAverageSell",
        "sellVolume",
        "volumeBTC",
        "date",
        "Date",
        "collection",
        "vesSchema",
        "tid",
        "price",
        "amount",
        "epoch",
        "usdSchema",
        "eurSchema",
        "module",
        "exports",
        "model"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,WAAW,GAAG,IAAIF,MAAJ,CAAW;AAC3BG,EAAAA,QAAQ,EAAEC,MADiB;AAE3BC,EAAAA,kBAAkB,EAAEC,MAFO;AAG3BC,EAAAA,MAAM,EAAED,MAHmB;AAI3BE,EAAAA,MAAM,EAAEF,MAJmB;AAK3BG,EAAAA,SAAS,EAAGH,MALe;AAM3BI,EAAAA,OAAO,EAAEJ,MANkB;AAO3BK,EAAAA,OAAO,EAAEL,MAPkB;AAQ3BM,EAAAA,mBAAmB,EAAEN,MARM;AAS3BO,EAAAA,UAAU,EAAEP,MATe;AAU3BQ,EAAAA,SAAS,EAAER,MAVgB;AAW3BS,EAAAA,IAAI,EAAEC;AAXqB,CAAX,EAYlB;AAACC,EAAAA,UAAU,EAAE;AAAb,CAZkB,CAApB;AAcA,IAAMC,SAAS,GAAG,IAAIlB,MAAJ,CAAW;AACzBmB,EAAAA,GAAG,EAAEb,MADoB;AAEzBH,EAAAA,QAAQ,EAAEC,MAFe;AAGzBgB,EAAAA,KAAK,EAAEd,MAHkB;AAIzBe,EAAAA,MAAM,EAAEf,MAJiB;AAKzBS,EAAAA,IAAI,EAAEX,MALmB;AAMzBkB,EAAAA,KAAK,EAAEhB;AANkB,CAAX,EAOhB;AAACW,EAAAA,UAAU,EAAE;AAAb,CAPgB,CAAlB;AASA,IAAMM,SAAS,GAAG,IAAIvB,MAAJ,CAAW;AACzBmB,EAAAA,GAAG,EAAEb,MADoB;AAEzBH,EAAAA,QAAQ,EAAEC,MAFe;AAGzBgB,EAAAA,KAAK,EAAEd,MAHkB;AAIzBe,EAAAA,MAAM,EAAEf,MAJiB;AAKzBS,EAAAA,IAAI,EAAEX,MALmB;AAMzBkB,EAAAA,KAAK,EAAEhB;AANkB,CAAX,EAOhB;AAACW,EAAAA,UAAU,EAAE;AAAb,CAPgB,CAAlB;AASA,IAAMO,SAAS,GAAG,IAAIxB,MAAJ,CAAW;AACzBmB,EAAAA,GAAG,EAAEb,MADoB;AAEzBH,EAAAA,QAAQ,EAAEC,MAFe;AAGzBgB,EAAAA,KAAK,EAAEd,MAHkB;AAIzBe,EAAAA,MAAM,EAAEf,MAJiB;AAKzBS,EAAAA,IAAI,EAAEX,MALmB;AAMzBkB,EAAAA,KAAK,EAAEhB;AANkB,CAAX,EAOhB;AAACW,EAAAA,UAAU,EAAE;AAAb,CAPgB,CAAlB;AASAQ,MAAM,CAACC,OAAP,GAAiBzB,qBAAS0B,KAAT,CAAe,OAAf,EAAwBzB,WAAxB,CAAjB",
      "sourceRoot": "/home/elias/Escritorio/tasita/Backend/src/models",
      "sourcesContent": [
        "import mongoose from 'mongoose'\r\nconst Schema = mongoose.Schema;\r\n\r\nconst ratesSchema = new Schema({\r\n    currency: String,\r\n    weightedAverageBuy: Number,\r\n    minbuy: Number,\r\n    maxbuy: Number,\r\n    buyVolume : Number,\r\n    minsell: Number,\r\n    maxsell: Number,\r\n    weightedAverageSell: Number,\r\n    sellVolume: Number,\r\n    volumeBTC: Number,\r\n    date: Date\r\n},{collection: 'rates' });\r\n\r\nconst vesSchema = new Schema({\r\n    tid: Number,\r\n    currency: String,\r\n    price: Number,\r\n    amount: Number,\r\n    date: String,\r\n    epoch: Number \r\n},{collection: 'ves' });\r\n\r\nconst usdSchema = new Schema({\r\n    tid: Number,\r\n    currency: String,\r\n    price: Number,\r\n    amount: Number,\r\n    date: String,\r\n    epoch: Number\r\n},{collection: 'usd'});\r\n\r\nconst eurSchema = new Schema({\r\n    tid: Number,\r\n    currency: String,\r\n    price: Number,\r\n    amount: Number,\r\n    date: String,\r\n    epoch: Number\r\n},{collection: 'eur'});\r\n \r\nmodule.exports = mongoose.model('rates', ratesSchema);\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1561736104250
  }
}